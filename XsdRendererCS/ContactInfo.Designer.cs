//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34003
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace XsdRendererCS
{
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public partial class Person
    {
        
        private PersonAddress addressField;
        
        private System.Collections.Generic.List<string> phonesField;
        
        private string nameField;
        
        private int ageField;
        
        private bool ageFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public PersonAddress Address
        {
            get
            {
                return this.addressField;
            }
            set
            {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Phone", IsNullable=false)]
        public System.Collections.Generic.List<string> Phones
        {
            get
            {
                return this.phonesField;
            }
            set
            {
                this.phonesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int Age
        {
            get
            {
                return this.ageField;
            }
            set
            {
                this.ageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AgeSpecified
        {
            get
            {
                return this.ageFieldSpecified;
            }
            set
            {
                this.ageFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class PersonAddress
    {
        
        private string streetField;
        
        private string numberField;
        
        private string cityField;
        
        private string stateField;
        
        private string countryField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Street
        {
            get
            {
                return this.streetField;
            }
            set
            {
                this.streetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Number
        {
            get
            {
                return this.numberField;
            }
            set
            {
                this.numberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string City
        {
            get
            {
                return this.cityField;
            }
            set
            {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string State
        {
            get
            {
                return this.stateField;
            }
            set
            {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Country
        {
            get
            {
                return this.countryField;
            }
            set
            {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
            }
        }
    }
    
    /// <summary>
    /// Factory class for classes defined in the ContactInfo schema.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Reegenerator", "2.0.5.0")]
    public sealed partial class ContactInfoFactory
    {
        
        private static string[] _schemas = new string[] {
                @"<?xml version=""1.0"" encoding=""utf-8""?>
<xs:schema attributeFormDefault=""unqualified"" elementFormDefault=""qualified"" xmlns:xs=""http://www.w3.org/2001/XMLSchema"">
  <xs:element name=""Person"">
    <xs:complexType>
      <xs:sequence>
        <xs:element name=""Address"">
          <xs:complexType>
            <xs:simpleContent>
              <xs:extension base=""xs:string"">
                <xs:attribute type=""xs:string"" name=""Street""/>
                <xs:attribute type=""xs:string"" name=""Number""/>
                <xs:attribute type=""xs:string"" name=""City""/>
                <xs:attribute type=""xs:string"" name=""State""/>
                <xs:attribute type=""xs:string"" name=""Country""/>
              </xs:extension>
            </xs:simpleContent>
          </xs:complexType>
        </xs:element>
        <xs:element name=""Phones"">
          <xs:complexType>
            <xs:sequence>
              <xs:element type=""xs:string"" name=""Phone"" maxOccurs=""unbounded"" minOccurs=""0""/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:attribute type=""xs:string"" name=""Name""/>
      <xs:attribute type=""xs:int"" name=""Age""/>
    </xs:complexType>
  </xs:element>
</xs:schema>"};
        
        private static System.Xml.Schema.XmlSchemaSet _xmlSchemaSet;
        
        private System.Text.StringBuilder _sb;
        
        static ContactInfoFactory()
        {
            _xmlSchemaSet = new System.Xml.Schema.XmlSchemaSet();
            for (int i = 0; (i < _schemas.Length); i = (i + 1))
            {
                _xmlSchemaSet.Add(System.Xml.Schema.XmlSchema.Read(new System.IO.StringReader(_schemas[i]), null));
            }
            _xmlSchemaSet.Compile();
        }
        
        /// <summary>
        /// The contents of the ContactInfo schema and the imported schema.
        /// It is used to check the validity of XML files against the XML schema.
        /// </summary>
        public static string[] Schemas
        {
            get
            {
                return _schemas;
            }
        }
        
        /// <summary>
        /// Gets a compiled schema set containing the ContactInfo schema and all included schemas.
        /// </summary>
        public static System.Xml.Schema.XmlSchemaSet XmlSchemaSet
        {
            get
            {
                return _xmlSchemaSet;
            }
        }
        
        private void ValidationCallBack(object sender, System.Xml.Schema.ValidationEventArgs e)
        {
            if ((this._sb.Length > 0))
            {
                this._sb.AppendLine();
            }
            this._sb.AppendFormat("Xml Validation Error ({0}, {1}): {2}", e.Exception.LineNumber, e.Exception.LinePosition, e.Message);
        }
        
        private T DoCreate<T>(System.Xml.XmlReader xmlReader)
        
        {
            if ((xmlReader == null))
            {
                throw new System.ArgumentNullException("xmlReader");
            }
            this._sb = new System.Text.StringBuilder();
            System.Xml.XmlReaderSettings xmlReaderSettings = new System.Xml.XmlReaderSettings();
            xmlReaderSettings.ValidationType = System.Xml.ValidationType.Schema;
            xmlReaderSettings.Schemas = XmlSchemaSet;
            xmlReaderSettings.ValidationEventHandler += new System.Xml.Schema.ValidationEventHandler(this.ValidationCallBack);
            System.Xml.Serialization.XmlSerializer xmlSerializer = new System.Xml.Serialization.XmlSerializer(typeof(T));
            T result;
            System.Xml.XmlReader validatingXmlReader = System.Xml.XmlReader.Create(xmlReader, xmlReaderSettings);
            try
            {
                result = ((T)(xmlSerializer.Deserialize(validatingXmlReader)));
            }
            finally
            {
                ((System.IDisposable)(validatingXmlReader)).Dispose();
            }
            string errors = this._sb.ToString();
            if ((errors.Length > 0))
            {
                throw new System.Xml.XmlException(errors);
            }
            return result;
        }
        
        /// <summary>
        /// Creates an object by deserializing the content of an xml document
        /// into an instance of the <typeparamref name="T"/>.
        /// <typeparamref name="T"/> must implement IInitializable to be initialized post creation.
        /// </summary>
        /// <typeparam name="T">The type of the instance to be created from the <paramref name="xmlReader"/>.</typeparam>
        /// <param name="xmlReader">The XML file project item.</param>
        /// <returns>An instance of type <typeparamref name="T"/>.</returns>"
        public static T Create<T>(System.Xml.XmlReader xmlReader)
        
        {
            return new ContactInfoFactory().DoCreate<T>(xmlReader);
        }
        
        /// <summary>
        /// Creates an object by deserializing the content of an xml document
        /// into an instance of the <typeparamref name="T"/>.
        /// <typeparamref name="T"/> must implement IInitializable to be initialized post creation.
        /// </summary>
        /// <typeparam name="T">The type of the instance to be created from the <paramref name="stream"/>.</typeparam>
        /// <param name="stream">The XML file project item.</param>
        /// <returns>An instance of type <typeparamref name="T"/>.</returns>"
        public static T Create<T>(System.IO.Stream stream)
        
        {
            if ((stream == null))
            {
                throw new System.ArgumentNullException("stream");
            }
            System.Xml.XmlReader xmlReader = System.Xml.XmlReader.Create(stream);
            try
            {
                return Create<T>(xmlReader);
            }
            finally
            {
                ((System.IDisposable)(xmlReader)).Dispose();
            }
        }
        
        /// <summary>
        /// Creates an object by deserializing the content of an xml document
        /// into an instance of the <typeparamref name="T"/>.
        /// <typeparamref name="T"/> must implement IInitializable to be initialized post creation.
        /// </summary>
        /// <typeparam name="T">The type of the instance to be created from the <paramref name="path"/>.</typeparam>
        /// <param name="path">The XML file project item.</param>
        /// <returns>An instance of type <typeparamref name="T"/>.</returns>"
        public static T Create<T>(string path)
        
        {
            if (string.IsNullOrEmpty(path))
            {
                throw new System.ArgumentNullException("path");
            }
            System.Xml.XmlReader xmlReader = System.Xml.XmlReader.Create(path);
            try
            {
                return Create<T>(xmlReader);
            }
            finally
            {
                ((System.IDisposable)(xmlReader)).Dispose();
            }
        }
        
        /// <summary>
        /// Creates an object by deserializing the content of an xml document
        /// into an instance of the <typeparamref name="T"/>.
        /// <typeparamref name="T"/> must implement IInitializable to be initialized post creation.
        /// </summary>
        /// <typeparam name="T">The type of the instance to be created from the <paramref name="textReader"/>.</typeparam>
        /// <param name="textReader">The XML file project item.</param>
        /// <returns>An instance of type <typeparamref name="T"/>.</returns>"
        public static T Create<T>(System.IO.TextReader textReader)
        
        {
            if ((textReader == null))
            {
                throw new System.ArgumentNullException("textReader");
            }
            System.Xml.XmlReader xmlReader = System.Xml.XmlReader.Create(textReader);
            try
            {
                return Create<T>(xmlReader);
            }
            finally
            {
                ((System.IDisposable)(xmlReader)).Dispose();
            }
        }
    }
}
